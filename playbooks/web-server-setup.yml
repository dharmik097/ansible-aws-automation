---
# =========================================================================
# Ansible Playbook: AWS Web Server Automation
# =========================================================================
# Purpose: Automate web server setup on Amazon Linux 2023
# Author: [Your Name]
# Date: [Current Date]
#
# This playbook demonstrates Infrastructure as Code (IaC) principles
# by automating the installation and configuration of a web server
# =========================================================================

- name: AWS Linux Web Server Complete Automation
  hosts: webservers
  become: yes
  gather_facts: yes

  # -----------------------------------------------------------------------
  # Variables Section
  # -----------------------------------------------------------------------
  vars:
    web_service: httpd
    web_port: 80
    document_root: /var/www/html
    website_title: "üöÄ Ansible AWS Automation Success!"

  # -----------------------------------------------------------------------
  # Pre-tasks: Display automation information
  # -----------------------------------------------------------------------
  pre_tasks:
    - name: Display automation start banner
      debug:
        msg:
          - ""
          - "üöÄ ============================================="
          - "   AWS LINUX WEB SERVER AUTOMATION STARTED   "
          - "üöÄ ============================================="
          - ""
          - "üì° Control machine: {{ inventory_hostname_short }}"
          - "üéØ Target machine: {{ ansible_hostname }}"
          - "üåê Target IP: {{ ansible_default_ipv4.address }}"
          - "üíª Operating System: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "üîß Architecture: {{ ansible_architecture }}"
          - "üíæ Memory: {{ (ansible_memtotal_mb/1024)|round(1) }} GB"
          - "‚ö° CPU Cores: {{ ansible_processor_vcpus }}"
          - ""

  # -----------------------------------------------------------------------
  # Main Tasks: Web Server Setup
  # -----------------------------------------------------------------------
  tasks:
    # Task 1: System Updates
    - name: Update all system packages
      yum:
        name: "*"
        state: latest
        update_cache: yes
      tags: ["system", "updates"]

    # Task 2: Install Web Server (without problematic packages)
    - name: Install Apache web server and essential tools
      yum:
        name:
          - httpd # Apache web server
          - wget # Download utility
          - unzip # Archive utility
          - git # Version control
        state: present
      tags: ["packages", "webserver"]

    # Task 3: Start and Enable Services
    - name: Start and enable Apache web server
      systemd:
        name: "{{ web_service }}"
        state: started
        enabled: yes
        daemon_reload: yes
      tags: ["services", "webserver"]

    # Task 4: Configure Firewall (if firewalld is installed)
    - name: Check if firewalld is installed
      systemd:
        name: firewalld
      register: firewalld_check
      failed_when: false
      tags: ["firewall"]

    - name: Open HTTP port in firewall
      firewalld:
        port: "{{ web_port }}/tcp"
        permanent: yes
        state: enabled
        immediate: yes
      when: firewalld_check.status is defined
      failed_when: false
      tags: ["firewall"]

    # Task 5: Create Beautiful Website
    - name: Create comprehensive success webpage
      template:
        src: index.html.j2
        dest: "{{ document_root }}/index.html"
        mode: "0644"
        owner: apache
        group: apache
      tags: ["website", "content"]

    # Task 6: Create Custom Website Template
    - name: Generate dynamic website content
      copy:
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>{{ website_title }}</title>
              <style>
                  * {
                      margin: 0;
                      padding: 0;
                      box-sizing: border-box;
                  }
                  
                  body {
                      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                      background: linear-gradient(135deg, #232F3E 0%, #FF9900 100%);
                      min-height: 100vh;
                      display: flex;
                      align-items: center;
                      justify-content: center;
                      padding: 20px;
                  }
                  
                  .container {
                      background: white;
                      border-radius: 20px;
                      box-shadow: 0 20px 40px rgba(0,0,0,0.3);
                      padding: 40px;
                      max-width: 800px;
                      width: 100%;
                      text-align: center;
                      position: relative;
                      overflow: hidden;
                  }
                  
                  .container::before {
                      content: '';
                      position: absolute;
                      top: 0;
                      left: 0;
                      right: 0;
                      height: 5px;
                      background: linear-gradient(90deg, #FF9900, #232F3E, #FF9900);
                  }
                  
                  h1 {
                      color: #232F3E;
                      font-size: 2.5em;
                      margin-bottom: 20px;
                      font-weight: 700;
                  }
                  
                  .success-banner {
                      background: linear-gradient(135deg, #27ae60, #2ecc71);
                      color: white;
                      padding: 25px;
                      border-radius: 15px;
                      margin: 30px 0;
                      font-size: 1.4em;
                      font-weight: 600;
                      box-shadow: 0 10px 20px rgba(39, 174, 96, 0.3);
                  }
                  
                  .info-grid {
                      display: grid;
                      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                      gap: 20px;
                      margin: 30px 0;
                  }
                  
                  .info-card {
                      background: #f8f9fa;
                      padding: 20px;
                      border-radius: 12px;
                      border-left: 4px solid #FF9900;
                      text-align: left;
                  }
                  
                  .info-card h3 {
                      color: #232F3E;
                      margin-bottom: 15px;
                      font-size: 1.2em;
                  }
                  
                  .info-card p {
                      margin: 8px 0;
                      color: #555;
                  }
                  
                  .highlight {
                      color: #FF9900;
                      font-weight: bold;
                  }
                  
                  .stats {
                      background: linear-gradient(135deg, #3498db, #2980b9);
                      color: white;
                      padding: 20px;
                      border-radius: 12px;
                      margin: 20px 0;
                  }
                  
                  .footer {
                      background: #232F3E;
                      color: white;
                      padding: 25px;
                      border-radius: 12px;
                      margin-top: 30px;
                  }
                  
                  .achievement {
                      display: inline-block;
                      background: #ffd700;
                      color: #333;
                      padding: 8px 15px;
                      border-radius: 20px;
                      margin: 5px;
                      font-weight: bold;
                      font-size: 0.9em;
                  }
                  
                  @media (max-width: 600px) {
                      .container {
                          padding: 20px;
                      }
                      
                      h1 {
                          font-size: 1.8em;
                      }
                      
                      .success-banner {
                          font-size: 1.2em;
                      }
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>{{ website_title }}</h1>
                  
                  <div class="success-banner">
                      ‚úÖ AWS Infrastructure Automated Successfully!
                  </div>
                  
                  <div class="info-grid">
                      <div class="info-card">
                          <h3>üñ•Ô∏è Server Information</h3>
                          <p><strong>Hostname:</strong> <span class="highlight">{{ ansible_hostname }}</span></p>
                          <p><strong>IP Address:</strong> <span class="highlight">{{ ansible_default_ipv4.address }}</span></p>
                          <p><strong>Operating System:</strong> <span class="highlight">{{ ansible_distribution }} {{ ansible_distribution_version }}</span></p>
                          <p><strong>Architecture:</strong> <span class="highlight">{{ ansible_architecture }}</span></p>
                      </div>
                      
                      <div class="info-card">
                          <h3>‚ö° System Resources</h3>
                          <p><strong>CPU Cores:</strong> <span class="highlight">{{ ansible_processor_vcpus }}</span></p>
                          <p><strong>Total Memory:</strong> <span class="highlight">{{ (ansible_memtotal_mb/1024)|round(1) }} GB</span></p>
                          <p><strong>Available Memory:</strong> <span class="highlight">{{ (ansible_memfree_mb/1024)|round(1) }} GB</span></p>
                          <p><strong>Kernel Version:</strong> <span class="highlight">{{ ansible_kernel }}</span></p>
                      </div>
                      
                      <div class="info-card">
                          <h3>üöÄ Automation Details</h3>
                          <p><strong>Configured:</strong> <span class="highlight">{{ ansible_date_time.date }} {{ ansible_date_time.time }}</span></p>
                          <p><strong>Timezone:</strong> <span class="highlight">{{ ansible_date_time.tz }}</span></p>
                          <p><strong>Uptime:</strong> <span class="highlight">{{ ansible_uptime_seconds | int // 3600 }} hours</span></p>
                          <p><strong>Python Version:</strong> <span class="highlight">{{ ansible_python_version }}</span></p>
                      </div>
                      
                      <div class="info-card">
                          <h3>üõ†Ô∏è Installed Services</h3>
                          <p><strong>Web Server:</strong> <span class="highlight">Apache HTTP Server</span></p>
                          <p><strong>Service Port:</strong> <span class="highlight">{{ web_port }}</span></p>
                          <p><strong>Document Root:</strong> <span class="highlight">{{ document_root }}</span></p>
                          <p><strong>Service Status:</strong> <span class="highlight">Running & Enabled</span></p>
                      </div>
                  </div>
                  
                  <div class="stats">
                      <h3>üìä What Just Happened?</h3>
                      <p>‚úÖ Your control machine connected to this target machine securely via SSH</p>
                      <p>‚úÖ Ansible automatically updated all system packages</p>
                      <p>‚úÖ Apache web server was installed and configured</p>
                      <p>‚úÖ The web service was started and enabled for auto-start</p>
                      <p>‚úÖ This dynamic webpage was created and deployed instantly</p>
                      <p>‚úÖ All tasks completed without human intervention!</p>
                  </div>
                  
                  <div class="footer">
                      <h3>üèÜ Congratulations!</h3>
                      <p>You've successfully demonstrated Infrastructure as Code (IaC) using Ansible!</p>
                      <p>This automation approach is used by DevOps engineers worldwide to manage thousands of servers.</p>
                      
                      <div style="margin-top: 20px;">
                          <span class="achievement">üéØ AWS Expert</span>
                          <span class="achievement">ü§ñ Automation Master</span>
                          <span class="achievement">‚ö° DevOps Engineer</span>
                          <span class="achievement">üöÄ Infrastructure Coder</span>
                      </div>
                  </div>
              </div>
          </body>
          </html>
        dest: "{{ document_root }}/index.html"
        mode: "0644"
        owner: apache
        group: apache
      tags: ["website", "template"]

    # Task 7: Verify Web Server Configuration
    - name: Test web server response
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ web_port }}"
        method: GET
        status_code: 200
        timeout: 10
      register: web_test
      retries: 3
      delay: 5
      tags: ["verification", "testing"]

    # Task 8: Create Status Monitoring Script
    - name: Create server monitoring script
      copy:
        content: |
          #!/bin/bash
          # Server Status Monitoring Script
          # Generated by Ansible Automation

          echo "========================================="
          echo "   SERVER STATUS REPORT"
          echo "========================================="
          echo "Date: $(date)"
          echo "Hostname: $(hostname)"
          echo "Uptime: $(uptime)"
          echo ""
          echo "Apache Status:"
          systemctl status httpd | grep Active
          echo ""
          echo "Listening Ports:"
          netstat -tlnp | grep :80
          echo ""
          echo "Memory Usage:"
          free -h
          echo ""
          echo "Disk Usage:"
          df -h /
          echo "========================================="
        dest: /usr/local/bin/server-status.sh
        mode: "0755"
      tags: ["monitoring", "scripts"]

  # -----------------------------------------------------------------------
  # Post-tasks: Display completion information
  # -----------------------------------------------------------------------
  post_tasks:
    - name: Display automation completion banner
      debug:
        msg:
          - ""
          - "üéâ ============================================="
          - "   AUTOMATION COMPLETED SUCCESSFULLY!        "
          - "üéâ ============================================="
          - ""
          - "üåê Website URL: http://{{ ansible_default_ipv4.address }}"
          - "üìä HTTP Status: {{ web_test.status | default('Checking...') }}"
          - "‚ö° Response Time: {{ web_test.elapsed | default('N/A') }} seconds"
          - "üìÖ Completed: {{ ansible_date_time.iso8601 }}"
          - ""
          - "üîç Next Steps:"
          - "   1. Visit your website using the public IP"
          - "   2. Check AWS Security Group for port 80 access"
          - "   3. Run: ssh target 'sudo /usr/local/bin/server-status.sh'"
          - ""
          - "üèÜ Congratulations! You've mastered Infrastructure as Code!"
          - ""
      tags: ["completion"]

  # =========================================================================
  # Handler Section: Services that need restart/reload
  # =========================================================================
  handlers:
    - name: restart apache
      systemd:
        name: "{{ web_service }}"
        state: restarted

    - name: reload apache
      systemd:
        name: "{{ web_service }}"
        state: reloaded
# =========================================================================
# End of Playbook
# =========================================================================

